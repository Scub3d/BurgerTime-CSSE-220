/**
 * 
 */
package burgertime;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

import javax.swing.JPanel;


/**
 * TODO Put here a description of what this class does.
 *
 * @author maas.
 *         Created Feb 16, 2014.
 */
public class KeyHandler extends JPanel{
	//final Temporal temporalObj;
	public KeyHandler(){
		KeyListener listener = new KeyListener(){
		//temporalObj.setIsPaused(isPaused);
			@Override
			public void keyPressed(KeyEvent e) {
				// TODO Auto-generated method stub
				System.out.println("keyPressed="+KeyEvent.getKeyText(e.getKeyCode())); 
				int key = e.getKeyCode();
				if(e.getKeyChar() == 'u' || e.getKeyChar() == 'U')
		    	{
		    		//Next level
					System.out.println("Next Level");
					if(CopyOfGameWorldEnvironment.levelChooser == 2)
					{
						System.out.println("You are at the last level.");
					}
					else
					{
						CopyOfGameWorldEnvironment.levelChooser++;
					}
		    	}
		    	else if(e.getKeyChar() == 'd' || e.getKeyChar() == 'D')
		    	{
		    		//Previous level
		    		System.out.println("Previous Level");
		    		if(CopyOfGameWorldEnvironment.levelChooser == 0)
					{
						System.out.println("You are at the first level.");
					}
					else
					{
						CopyOfGameWorldEnvironment.levelChooser--;
					}
		    	}
		    	else if(e.getKeyChar() == 'p' || e.getKeyChar() == 'P')
		    	{
		    		boolean paused = GameWorld.isItPaused();
		    		if (paused) {
						System.out.println("Paused");
					} else {
						System.out.println("Moving");
					}
		    		paused = !paused;
		    		CopyOfGameWorldEnvironment.setPaused(paused);
		    		if (paused) {
						System.out.println("Paused");
					} else {
						System.out.println("Resume");
					}
		    	}
				if(key == KeyEvent.VK_UP)
				{
					//System.out.println("UP");
					Hero.setVelocityY(-0.1);
					//System.out.println(Hero.getVelocityY());
				}
				else if (e.getKeyCode() == KeyEvent.VK_LEFT) 
		    	{
		    		System.out.println("LEFT");
		    		Hero.setVelocityX(-0.1);
		    	}
		    	else if (e.getKeyCode() == KeyEvent.VK_RIGHT) 
		    	{
		    		System.out.println("RIGHT");
		    		Hero.setVelocityX(0.1);
		    	}
		    	else if (e.getKeyCode() == KeyEvent.VK_DOWN) 
		    	{
		    		System.out.println("Down");
		    		Hero.setVelocityY(0.1);
		    	}
		    	else if (e.getKeyCode() == KeyEvent.VK_SPACE) 
		    	{
		    		//spray the pepper spray
		    		int pepperUsed = -1;
		    		int pepperLeft = StatusPanel.getPepper();
		    		if(pepperLeft == 0)
		    		{
		    			System.out.println("Out of pepperspray");
		    		}
		    		else
		    		{
		    			StatusPanel.setPepper(pepperUsed);
		    			for(BurgTimeChar c: CopyOfGameWorldEnvironment.guards)
		    			{
		    				if(Hero.getCenterX() + 2 == c.getCenterPoint().getX() || Hero.getCenterX() - 2 ==c.getCenterPoint().getX() || Hero.getCenterY() + 1 == c.getCenterPoint().getY() || Hero.getCenterY() - 1 == c.getCenterPoint().getY())
		    				{
		    					//pause dat guard
		    				}
		    			}
		    		}

	    		}
			}

			@Override
			public void keyReleased(KeyEvent e) {
				// TODO Auto-generated method stub
				System.out.println("keyReleased="+KeyEvent.getKeyText(e.getKeyCode()));
				int key = e.getKeyCode();
				if(key == KeyEvent.VK_UP)
				{
					//System.out.println("UP");
					Hero.setVelocityY(0);
					//System.out.println(Hero.getVelocityY());
				}
				else if (e.getKeyCode() == KeyEvent.VK_LEFT) 
		    	{
		    		System.out.println("LEFT");
		    		Hero.setVelocityX(0);
		    	}
		    	else if (e.getKeyCode() == KeyEvent.VK_RIGHT) 
		    	{
		    		System.out.println("RIGHT");
		    		Hero.setVelocityX(0);
		    	}
		    	else if (e.getKeyCode() == KeyEvent.VK_DOWN) 
		    	{
		    		System.out.println("Down");
		    		Hero.setVelocityY(0);
		    	}
		    	else if (e.getKeyCode() == KeyEvent.VK_SPACE) 
		    	{
		    		//ignored
	    		}
			}

			@Override
			public void keyTyped(KeyEvent e) {
				// TODO Auto-generated method stub
				
			}
			
		};
		addKeyListener(listener);
		setFocusable(true);
		
	}

}
